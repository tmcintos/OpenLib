documentation for protosh (rename later)
-bug reports, comments, ideas to Tim

Definitions
-----------
'verb' refers to all characters on the command line up to the 1st space.
'argument list' refers to all characters on the command line following
the 1st space.
'word' refers to a group of characters treated as one entity.

Command Line
------------
The _argument list_ is broken down into words at spaces.  Enclosing a string
in quotes ',`, or " will cause it to become 1 word.  You may escape any
character with the backslash \, encluding quotes.  If a line contains one
of !, $, *, ? it is subject to expansions.  Escaping these characters causes
them to lose there special meaning.  Additionally, enclosing a string in
single quotes (') prevents all expansions on that string.  If a string is
enclosed in double quotes ("), all expansions are done except globbing.  If a
string is enclosed in backquotes (`), it will be evaluated as LPC code and
the result of the last expression will be put in it's place. (Note: LPC code
expansion is not yet implemented at the time of this writing)

Environment Variables and Aliases
---------------------------------
Variables/Aliases are maintained by using the set/unset/alias/unalias commands.
The syntax for set/alias is:  set <variable> <value>
The syntax for unset/unalias is:  unset <variable>
The command set/alias by itself will display a list of settings.

Alias, History, and Variable Expansions
---------------------------------------
Alias expansions affect the verb only and are always done.  Shell variables
may be expanded on the command line by using the following syntax:

  $variable          Use this when variable is not part of another word
  ${variable}        Use this when variable is a part of another word

History events may be expanded in a similar fashion.  The syntax for
expanding a history event on the command line is:

  !event, !{event}   Same rules apply as for variables.

The event ! refers to the last command executed.

Filename Globbing
-----------------
Globbing is done whenever an unescaped and unquoted * or ? appears in a
word.  The word is first run through absolute_path() and then globbing
is done on the result.  * matches any group of characters and ? matches any
single character.   Deep expansions are possible, i.e. /*/*/*/* (Although
something as unrestricted as this eats tons of CPU and is not a good idea).

Variables to Set (current list)
----------------
  TITLE         your title
  TERM          your terminal type (ansi, vt100, vt102, xterm, etc.)
  LENGTH        your screen length in rows
  WIDTH         your screen width in columns
  PATH          your search path. Paths are separated by ':'
  PROMPT        your prompt.  Can put in following tokens:
      %~          your current directory with respect to ~
      %/          your current directory with respect to /
      %d          the name of the day
      %w          the name of the month
      %Y          the year in YYYY format
      %t          the current time in HH:MM:SS
      %D          the date in short format
      %n          your name
      %m          the mud name
  noglob        prevents all globbing if set
  history       set to the size of the history buffer
  MORE_EXIT_END used by the more() function. Exits at EOF if set.
