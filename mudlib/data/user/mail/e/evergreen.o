#obj/clone/mailbox.c
msgs ({(/1,"Tim","Re: shell mockup","To: evergreenFrom: TimDate: Thu Feb 15 14:38:45 1996Subject: Re: shell mockupCC: BCC: -------Looks pretty good.  I think aliases could probably just be handled completelyby the shells and we could take all input processing out of the playerobjects (of course you would then loose your aliases when changing shellsbut we could assume you wouldn't need to do that very often) Ahh...I justrealized why you did that :) I guess it would suck to have to have theshell save it's state...Ok, so aliases are stored in a mapping in theuser but there will be no facility for actually doing replacement ofaliases or variables.Well, I've got a test tomorrow so can't do anything today but hopefullyI can start playing around with some ideas tomorrow afternoon.Talk to you later.",/),(/1,"Tim","User Body Prototype","To: evergreenFrom: TimDate: Sat Feb 17 05:03:37 1996Subject: User Body PrototypeCC: BCC: -------Well, I created a prototype for the new user.c.  It works with theshell to do all input/output processing; a functioning shell isrequired.  I haven't put any of the stuff in that gets the shellassigned to the body, nor did I put in any add_action yet because Iwasn't sure whether the body would do that or the shell.  Which remindsme that I think the command daemon may need reworked along with thisstuff.  I also rewrote the resolve_path efun as absolute_path andaltered RESOLVE_PATH() in config.h accordingly so there were fewproblems.  Also fixed user_cwd() and user_path() efuns to return thehome directory of a user dynamically, as stored in the connection ob.If the user doesn't exist these default to the standard /u/t/tim typething.  This stuff is in /adm/efuns/path_utils.c.  Check out the user proto in ~tim/newuser.c and see what you think,write down any ideas and let me know.later!",/),(/1,"Tim","user/shell","To: evergreenFrom: TimDate: Mon Feb 19 01:44:24 1996Subject: user/shellCC: BCC: -------Don't know which would be the best, putting the command hook in theplayer or the shell.  If it goes in the player then the player shouldprobably also keep track of the history; otherwise the shell should doboth.  Do you see any reasons to do one or the other?later,Tim",/),(/1,"Tim","more user/shell :)","To: evergreenFrom: TimDate: Mon Feb 19 22:46:35 1996Subject: more user/shell :)CC: BCC: -------Ok, I went ahead and added cmd_hook() in the newuser.c, and it callsa func. in the shell which can end the process right there by returningnonzero.  Otherwise it defaults to the command object returned byCMD_D (which I cleaned up a bit tonight).  I've got a test Wed. so Iwon't be on too much Tuesday but I'll probably check my mail etc.later,Tim",/),})
